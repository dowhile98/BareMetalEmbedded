
GPIO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000210  08000188  08000188  00001188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000398  080003a0  000013a0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000398  08000398  000013a0  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  08000398  08000398  000013a0  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  08000398  080003a0  000013a0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000398  08000398  00001398  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800039c  0800039c  0000139c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  000013a0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000013a0  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00002000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00002000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  000013a0  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000921  00000000  00000000  000013d0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000260  00000000  00000000  00001cf1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000078  00000000  00000000  00001f58  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000004d  00000000  00000000  00001fd0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000182e1  00000000  00000000  0000201d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000a6a  00000000  00000000  0001a2fe  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000887da  00000000  00000000  0001ad68  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  000a3542  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000000d8  00000000  00000000  000a3588  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 0000005d  00000000  00000000  000a3660  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	@ (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	@ (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	@ (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000000 	.word	0x20000000
 80001a4:	00000000 	.word	0x00000000
 80001a8:	08000380 	.word	0x08000380

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	@ (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	@ (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	@ (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000004 	.word	0x20000004
 80001c4:	08000380 	.word	0x08000380

080001c8 <GPIO_pinWrite>:
}BitBanding_t;

#define GPIOA_ODR ((BitBanding_t *)(BIT_WORD_ADDRES_PP(0x40020014, 0)))


void GPIO_pinWrite(GPIO_TypeDef *GPIOx, uint8_t pin, uint8_t state){
 80001c8:	b480      	push	{r7}
 80001ca:	b083      	sub	sp, #12
 80001cc:	af00      	add	r7, sp, #0
 80001ce:	6078      	str	r0, [r7, #4]
 80001d0:	460b      	mov	r3, r1
 80001d2:	70fb      	strb	r3, [r7, #3]
 80001d4:	4613      	mov	r3, r2
 80001d6:	70bb      	strb	r3, [r7, #2]

	if(state != 0){
 80001d8:	78bb      	ldrb	r3, [r7, #2]
 80001da:	2b00      	cmp	r3, #0
 80001dc:	d009      	beq.n	80001f2 <GPIO_pinWrite+0x2a>
		GPIOx->BSRR |= 	1<<pin;
 80001de:	687b      	ldr	r3, [r7, #4]
 80001e0:	699b      	ldr	r3, [r3, #24]
 80001e2:	78fa      	ldrb	r2, [r7, #3]
 80001e4:	2101      	movs	r1, #1
 80001e6:	fa01 f202 	lsl.w	r2, r1, r2
 80001ea:	431a      	orrs	r2, r3
 80001ec:	687b      	ldr	r3, [r7, #4]
 80001ee:	619a      	str	r2, [r3, #24]
	}else{
		GPIOx->BSRR |= 1<<(16 + pin);
	}

}
 80001f0:	e009      	b.n	8000206 <GPIO_pinWrite+0x3e>
		GPIOx->BSRR |= 1<<(16 + pin);
 80001f2:	687b      	ldr	r3, [r7, #4]
 80001f4:	699b      	ldr	r3, [r3, #24]
 80001f6:	78fa      	ldrb	r2, [r7, #3]
 80001f8:	3210      	adds	r2, #16
 80001fa:	2101      	movs	r1, #1
 80001fc:	fa01 f202 	lsl.w	r2, r1, r2
 8000200:	431a      	orrs	r2, r3
 8000202:	687b      	ldr	r3, [r7, #4]
 8000204:	619a      	str	r2, [r3, #24]
}
 8000206:	bf00      	nop
 8000208:	370c      	adds	r7, #12
 800020a:	46bd      	mov	sp, r7
 800020c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000210:	4770      	bx	lr
	...

08000214 <main>:
#define PIN_SET_(a, b, c)		{GPIO ## a ->BSRR |= (c!= 0) ? 1<<b : 1<<(b + 16);}
#define PIN_SET(a, b)			PIN_SET_(a, b)


int main(void)
{
 8000214:	b580      	push	{r7, lr}
 8000216:	af00      	add	r7, sp, #0

	*((volatile uint32_t *)(0x20000300)) |= 1<<2;
 8000218:	4b24      	ldr	r3, [pc, #144]	@ (80002ac <main+0x98>)
 800021a:	681b      	ldr	r3, [r3, #0]
 800021c:	4a23      	ldr	r2, [pc, #140]	@ (80002ac <main+0x98>)
 800021e:	f043 0304 	orr.w	r3, r3, #4
 8000222:	6013      	str	r3, [r2, #0]

	*((volatile uint8_t *)(0x22006008)) = 0;
 8000224:	4b22      	ldr	r3, [pc, #136]	@ (80002b0 <main+0x9c>)
 8000226:	2200      	movs	r2, #0
 8000228:	701a      	strb	r2, [r3, #0]

	RCC->AHB1ENR |= RCC_AHB1ENR_GPIOAEN;
 800022a:	4b22      	ldr	r3, [pc, #136]	@ (80002b4 <main+0xa0>)
 800022c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800022e:	4a21      	ldr	r2, [pc, #132]	@ (80002b4 <main+0xa0>)
 8000230:	f043 0301 	orr.w	r3, r3, #1
 8000234:	6313      	str	r3, [r2, #48]	@ 0x30
	//PA5
	GPIOA->MODER &=~ GPIO_MODER_MODE5;
 8000236:	4b20      	ldr	r3, [pc, #128]	@ (80002b8 <main+0xa4>)
 8000238:	681b      	ldr	r3, [r3, #0]
 800023a:	4a1f      	ldr	r2, [pc, #124]	@ (80002b8 <main+0xa4>)
 800023c:	f423 6340 	bic.w	r3, r3, #3072	@ 0xc00
 8000240:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |= GPIO_MODER_MODE5_0;
 8000242:	4b1d      	ldr	r3, [pc, #116]	@ (80002b8 <main+0xa4>)
 8000244:	681b      	ldr	r3, [r3, #0]
 8000246:	4a1c      	ldr	r2, [pc, #112]	@ (80002b8 <main+0xa4>)
 8000248:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 800024c:	6013      	str	r3, [r2, #0]
	//PA10
	GPIOA->MODER &=~ GPIO_MODER_MODE10;
 800024e:	4b1a      	ldr	r3, [pc, #104]	@ (80002b8 <main+0xa4>)
 8000250:	681b      	ldr	r3, [r3, #0]
 8000252:	4a19      	ldr	r2, [pc, #100]	@ (80002b8 <main+0xa4>)
 8000254:	f423 1340 	bic.w	r3, r3, #3145728	@ 0x300000
 8000258:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |= GPIO_MODER_MODE10_0;
 800025a:	4b17      	ldr	r3, [pc, #92]	@ (80002b8 <main+0xa4>)
 800025c:	681b      	ldr	r3, [r3, #0]
 800025e:	4a16      	ldr	r2, [pc, #88]	@ (80002b8 <main+0xa4>)
 8000260:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000264:	6013      	str	r3, [r2, #0]
	/*
	GPIOA_PA5_ODR = 1;

	GPIOA_PA5_ODR = 0;*/
	GPIOA_ODR->bit5 = 1;
 8000266:	4b15      	ldr	r3, [pc, #84]	@ (80002bc <main+0xa8>)
 8000268:	2201      	movs	r2, #1
 800026a:	615a      	str	r2, [r3, #20]
	GPIOA_ODR->bit10 = 1;
 800026c:	4b13      	ldr	r3, [pc, #76]	@ (80002bc <main+0xa8>)
 800026e:	2201      	movs	r2, #1
 8000270:	629a      	str	r2, [r3, #40]	@ 0x28

	GPIOA_ODR->bit5 = 0;
 8000272:	4b12      	ldr	r3, [pc, #72]	@ (80002bc <main+0xa8>)
 8000274:	2200      	movs	r2, #0
 8000276:	615a      	str	r2, [r3, #20]

	GPIO_pinWrite(GPIOA, 5, 1);
 8000278:	2201      	movs	r2, #1
 800027a:	2105      	movs	r1, #5
 800027c:	480e      	ldr	r0, [pc, #56]	@ (80002b8 <main+0xa4>)
 800027e:	f7ff ffa3 	bl	80001c8 <GPIO_pinWrite>

	PIN_SET(PA5, 1);
 8000282:	4b0d      	ldr	r3, [pc, #52]	@ (80002b8 <main+0xa4>)
 8000284:	699b      	ldr	r3, [r3, #24]
 8000286:	4a0c      	ldr	r2, [pc, #48]	@ (80002b8 <main+0xa4>)
 8000288:	f043 0320 	orr.w	r3, r3, #32
 800028c:	6193      	str	r3, [r2, #24]
	PIN_SET(PA10, 1);
 800028e:	4b0a      	ldr	r3, [pc, #40]	@ (80002b8 <main+0xa4>)
 8000290:	699b      	ldr	r3, [r3, #24]
 8000292:	4a09      	ldr	r2, [pc, #36]	@ (80002b8 <main+0xa4>)
 8000294:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8000298:	6193      	str	r3, [r2, #24]
	PIN_SET(PA10, 0);
 800029a:	4b07      	ldr	r3, [pc, #28]	@ (80002b8 <main+0xa4>)
 800029c:	699b      	ldr	r3, [r3, #24]
 800029e:	4a06      	ldr	r2, [pc, #24]	@ (80002b8 <main+0xa4>)
 80002a0:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 80002a4:	6193      	str	r3, [r2, #24]

    /* Loop forever */
	for(;;);
 80002a6:	bf00      	nop
 80002a8:	e7fd      	b.n	80002a6 <main+0x92>
 80002aa:	bf00      	nop
 80002ac:	20000300 	.word	0x20000300
 80002b0:	22006008 	.word	0x22006008
 80002b4:	40023800 	.word	0x40023800
 80002b8:	40020000 	.word	0x40020000
 80002bc:	42400280 	.word	0x42400280

080002c0 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 80002c0:	b480      	push	{r7}
 80002c2:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80002c4:	4b06      	ldr	r3, [pc, #24]	@ (80002e0 <SystemInit+0x20>)
 80002c6:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80002ca:	4a05      	ldr	r2, [pc, #20]	@ (80002e0 <SystemInit+0x20>)
 80002cc:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 80002d0:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 80002d4:	bf00      	nop
 80002d6:	46bd      	mov	sp, r7
 80002d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002dc:	4770      	bx	lr
 80002de:	bf00      	nop
 80002e0:	e000ed00 	.word	0xe000ed00

080002e4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002e4:	480d      	ldr	r0, [pc, #52]	@ (800031c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002e6:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80002e8:	f7ff ffea 	bl	80002c0 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002ec:	480c      	ldr	r0, [pc, #48]	@ (8000320 <LoopForever+0x6>)
  ldr r1, =_edata
 80002ee:	490d      	ldr	r1, [pc, #52]	@ (8000324 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002f0:	4a0d      	ldr	r2, [pc, #52]	@ (8000328 <LoopForever+0xe>)
  movs r3, #0
 80002f2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002f4:	e002      	b.n	80002fc <LoopCopyDataInit>

080002f6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002f6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002f8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002fa:	3304      	adds	r3, #4

080002fc <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002fc:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002fe:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000300:	d3f9      	bcc.n	80002f6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000302:	4a0a      	ldr	r2, [pc, #40]	@ (800032c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000304:	4c0a      	ldr	r4, [pc, #40]	@ (8000330 <LoopForever+0x16>)
  movs r3, #0
 8000306:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000308:	e001      	b.n	800030e <LoopFillZerobss>

0800030a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800030a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800030c:	3204      	adds	r2, #4

0800030e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800030e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000310:	d3fb      	bcc.n	800030a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000312:	f000 f811 	bl	8000338 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000316:	f7ff ff7d 	bl	8000214 <main>

0800031a <LoopForever>:

LoopForever:
  b LoopForever
 800031a:	e7fe      	b.n	800031a <LoopForever>
  ldr   r0, =_estack
 800031c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000320:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000324:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000328:	080003a0 	.word	0x080003a0
  ldr r2, =_sbss
 800032c:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000330:	2000001c 	.word	0x2000001c

08000334 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000334:	e7fe      	b.n	8000334 <ADC_IRQHandler>
	...

08000338 <__libc_init_array>:
 8000338:	b570      	push	{r4, r5, r6, lr}
 800033a:	4d0d      	ldr	r5, [pc, #52]	@ (8000370 <__libc_init_array+0x38>)
 800033c:	4c0d      	ldr	r4, [pc, #52]	@ (8000374 <__libc_init_array+0x3c>)
 800033e:	1b64      	subs	r4, r4, r5
 8000340:	10a4      	asrs	r4, r4, #2
 8000342:	2600      	movs	r6, #0
 8000344:	42a6      	cmp	r6, r4
 8000346:	d109      	bne.n	800035c <__libc_init_array+0x24>
 8000348:	4d0b      	ldr	r5, [pc, #44]	@ (8000378 <__libc_init_array+0x40>)
 800034a:	4c0c      	ldr	r4, [pc, #48]	@ (800037c <__libc_init_array+0x44>)
 800034c:	f000 f818 	bl	8000380 <_init>
 8000350:	1b64      	subs	r4, r4, r5
 8000352:	10a4      	asrs	r4, r4, #2
 8000354:	2600      	movs	r6, #0
 8000356:	42a6      	cmp	r6, r4
 8000358:	d105      	bne.n	8000366 <__libc_init_array+0x2e>
 800035a:	bd70      	pop	{r4, r5, r6, pc}
 800035c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000360:	4798      	blx	r3
 8000362:	3601      	adds	r6, #1
 8000364:	e7ee      	b.n	8000344 <__libc_init_array+0xc>
 8000366:	f855 3b04 	ldr.w	r3, [r5], #4
 800036a:	4798      	blx	r3
 800036c:	3601      	adds	r6, #1
 800036e:	e7f2      	b.n	8000356 <__libc_init_array+0x1e>
 8000370:	08000398 	.word	0x08000398
 8000374:	08000398 	.word	0x08000398
 8000378:	08000398 	.word	0x08000398
 800037c:	0800039c 	.word	0x0800039c

08000380 <_init>:
 8000380:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000382:	bf00      	nop
 8000384:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000386:	bc08      	pop	{r3}
 8000388:	469e      	mov	lr, r3
 800038a:	4770      	bx	lr

0800038c <_fini>:
 800038c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800038e:	bf00      	nop
 8000390:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000392:	bc08      	pop	{r3}
 8000394:	469e      	mov	lr, r3
 8000396:	4770      	bx	lr
